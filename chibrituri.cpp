#include <iomanip>
#include <iostream>
#include <windows.h>
#include <stdio.h>
#include <conio.h>
#include <string>
#include <algorithm>
#include <cctype>
#include <cstdlib>
using namespace std;

void gotoxy(short a, short b){ COORD pos={a,b}; SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),pos); }

struct TermSize{ int cols; int rows; };

TermSize get_terminal_size(){
    CONSOLE_SCREEN_BUFFER_INFO csbi;
    GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi);
    int columns = csbi.srWindow.Right - csbi.srWindow.Left + 1;
    int rows = csbi.srWindow.Bottom - csbi.srWindow.Top + 1;
    return {columns, rows};
}

char mat0[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat1[10][10]={
 ' ',' ',' ',' ',char(201),char(187),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(200),char(188),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(201),char(187),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(186),char(186),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(200),char(188),' ',' ',' ',' '
};
char mat2[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat3[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat4[10][10]={
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186)
};
char mat5[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat6[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat7[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186)
};
char mat8[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char mat9[10][10]={
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 char(186),' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',char(186),
 ' ','\315','\315','\315','\315','\315','\315','\315','\315',' '
};
char matx[10][10]={
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',char(201),char(187),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(200),char(188),' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',char(201),char(187),' ',' ',' ',' ',
 ' ',' ',' ',' ',char(200),char(188),' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',
 ' ',' ',' ',' ',' ',' ',' ',' ',' ',' '
};

int col[10]={4,2,2,2,3,2,3,2,4,3};
int lin[10]={2,0,3,3,1,3,3,1,3,3};

int i,j,k,ver,ori,cnt;

char m(int x){
    if(x==0) return mat0[i][j];
    if(x==1) return mat1[i][j];
    if(x==2) return mat2[i][j];
    if(x==3) return mat3[i][j];
    if(x==4) return mat4[i][j];
    if(x==5) return mat5[i][j];
    if(x==6) return mat6[i][j];
    if(x==7) return mat7[i][j];
    if(x==8) return mat8[i][j];
    return mat9[i][j];
}

int rendered_line_width_chars(){ int glyphs=5; int spaces=2; return glyphs*10+spaces; }
int rendered_height_rows(){ return 10; }
void clear_screen(){ system("cls"); }

void print_time_block_centered(int hr_tens,int hr_ones,int mi_tens,int mi_ones){
    TermSize ts=get_terminal_size();
    int content_w=rendered_line_width_chars();
    int content_h=rendered_height_rows();
    int left_pad=max(0,(ts.cols-content_w)/2);
    int top_pad=max(0,(ts.rows-content_h)/2);
    clear_screen();
    for(int r=0;r<top_pad;++r) cout<<'\n';
    for(i=0;i<10;i++){
        for(int s=0;s<left_pad;s++) cout<<' ';
        for(j=0;j<10;j++) cout<<m(hr_tens);
        cout<<' ';
        for(j=0;j<10;j++) cout<<m(hr_ones);
        for(j=0;j<10;j++) cout<<matx[i][j];
        for(j=0;j<10;j++) cout<<m(mi_tens);
        cout<<' ';
        for(j=0;j<10;j++) cout<<m(mi_ones);
        cout<<'\n';
    }
}

char mat2_err_fix_guard; // no-op to avoid empty translation unit warnings if needed

int main(){
    int hour=0,min=0,hr=0,mi=0;
    cnt=0;

    cout<<"\n\n\n\n";
    cout<<"        numar chibrituri verticala : ";
    cin>>ver;
    cout<<'\n';
    cout<<"        numar chibrituri orizontala : ";
    cin>>ori;

    hour=0;
    min=0;
    hr=hour/10;
    mi=min/10;

    while(1){
        gotoxy(0,0);
        for(hour=0;hour<24;hour++){
            for(min=0;min<60;min++){
                hr=hour/10;
                mi=min/10;

                print_time_block_centered(hr, hour%10, mi, min%10);

                int suma1=col[hr]+col[mi]+col[hour%10]+col[min%10];
                int suma2=lin[hr]+lin[mi]+lin[hour%10]+lin[min%10];

                if(suma1==ver && suma2==ori){
                    cnt++;
                    system("Color 0A");
                    cout<<"\n\n";
                    for(k=0;k<=94;k++) cout<<' ';
                    cout<<cnt<<' '<<"solutii gasite";
                    Sleep(5000);
                    system("Color 07");
                }

                Sleep(1000);
            }
        }
        min=0;
    }
    return 0;
}
